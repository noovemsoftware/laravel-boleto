name: build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        php: ["7.3"]
        # Apenas versões com suporte
        laravel:
          - "5.5.*"
          - "5.8.*"
          - "6.*"
          - "7.*"
          - "8.*"
        include:
          - os: ubuntu
            php: "7.3"
            laravel: "8.*"
          - os: macos
            php: "7.3"
            laravel: "7.*"
          - os: windows
            php: "7.3"
            laravel: "7.*"
    runs-on: ${{ matrix.os }}-latest
    name: LRV ${{ matrix.laravel }} (${{ matrix.os }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, mbstring, mcrypt, openssl
          tools: composer
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      # Necessário para usar a versão correta de teste do laravel
      - name: Setup Laravel
        run: |
          composer require "orchestra/testbench=*" --no-update --no-suggest --ignore-platform-reqs --dev
          composer require "laravel/framework=${{ matrix.laravel }}" --no-update --no-suggest --ignore-platform-reqs

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-suggest --ignore-platform-reqs

      - name: Run tests
        run: "vendor/bin/phpunit -c phpunit.xml --coverage-clover=coverage.clover"

      # Tenta enviar a cobertura de código até 5 vezes
      - name: Upload coverage
        run: |
          cover() {
            curl -s https://scrutinizer-ci.com/ocular.phar -o ocular.phar
            php ocular.phar code-coverage:upload --format=php-clover coverage.clover
          }
          for i in {1..5}; do cover && break || sleep 5; done
        shell: bash
        continue-on-error: true
